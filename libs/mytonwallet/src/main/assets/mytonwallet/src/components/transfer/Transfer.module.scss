@import "../../styles/mixins";

.modalDialog {
  height: 35.5rem;

  @supports (height: env(safe-area-inset-bottom)) {
    height: calc(35.5rem + env(safe-area-inset-bottom));
  }

  :global(.is-native-bottom-sheet) & {
    height: calc(35.5rem + var(--safe-area-bottom, 0rem));
  }
}

.inputButton {
  position: absolute;
  right: 0.5rem;
  bottom: 0.5rem;

  display: flex;
  align-items: center;
  justify-content: center;

  width: 2rem;
  height: 2rem;

  font-size: 1.25rem;
  color: var(--color-gray-3);

  border-radius: var(--border-radius-small) !important;

  &:active {
    color: var(--color-input-button-text);

    background-color: var(--color-input-button-background);

    // Optimization
    transition: none;
  }

  @media (hover: hover) {
    &:hover,
    &:focus-visible {
      color: var(--color-input-button-text);

      background-color: var(--color-input-button-background);
    }
  }
}

.inputButtonClear {
  color: var(--color-gray-2);

  &:active {
    color: var(--color-gray-2);

    opacity: 0.85;
    background-color: unset;

    // Optimization
    transition: none;
  }

  @media (hover: hover) {
    &:hover,
    &:focus-visible {
      color: var(--color-gray-2);

      opacity: 0.85;
      background-color: unset;
    }
  }
}

.inputButtonTransition {
  width: auto;
  height: auto;
}

.inputButtonShifted {
  right: 2.5rem;
}

.amountInput {
  margin-bottom: 2rem;
}

.help,
.label {
  padding: 0 0.5rem;

  font-size: 0.8125rem;
  line-height: 0.875rem;
}

.amountBottomWrapper {
  position: relative;
}

.amountBottom {
  position: absolute;
  top: -1.75rem;

  display: flex;
  justify-content: space-between;

  width: 100%;
  min-height: 1rem;
  padding: 0 0.5rem;

  font-size: 0.75rem;
  line-height: 1rem;
  color: var(--color-gray-5);
}

.amountBottomRight {
  flex: 1;

  &_slide {
    text-align: right;

    background: var(--color-background-window);
  }

  &.Transition {
    > .Transition_slide-from {
      animation-duration: 150ms !important;
    }

    > .Transition_slide-to {
      animation-duration: 150ms !important;
    }
  }

  &_static &_slide {
    background: var(--color-background-first);
  }
}

.balanceError {
  color: var(--color-red);
}

.feeValue {
  font-weight: 600;
  white-space: nowrap;
}

.balanceContainer {
  position: relative;
  z-index: 1;

  width: 100%;
}

.balance {
  position: absolute;
  top: -0.125rem;
  right: 0.5rem;

  display: flex;
  gap: 0.25rem;

  font-size: 0.8125rem;
  color: var(--color-gray-1);
}

.balanceLink {
  cursor: var(--custom-cursor, pointer);

  font-weight: 600;
  color: var(--color-blue);
  text-decoration: underline;
  text-decoration-style: dotted;

  @media (hover: hover) {
    &:hover,
    &:focus-visible {
      text-decoration: none;
    }
  }
}

.amountInCurrency {
  font-weight: 600;
}

.help {
  margin-top: -0.5rem;
  margin-bottom: 1rem;

  color: var(--color-gray-1);
}

.label {
  display: flex;
  gap: 0.25rem;
  align-items: center;

  margin-bottom: 0.5rem;

  font-weight: 700;
  color: var(--color-gray-2);
}

.description {
  margin-top: 0.25rem;

  font-size: 0.9375rem;
  line-height: 1.25;
  color: var(--color-gray-1);
  text-align: center;
}

.addressWidget {
  margin-bottom: 1.25rem;
}

.inputReadOnly {
  position: relative;

  display: flex;

  box-sizing: border-box;
  margin-bottom: 1.25rem;
  padding: 0.875rem 0.75rem;

  font-size: 1rem;
  font-weight: 600;
  line-height: 1.25rem;
  color: var(--color-black);
  text-align: left;
  word-break: break-all;

  background: var(--color-background-first);
  border: none;
  border-radius: var(--border-radius-default);
  outline: none;

  &_words {
    word-break: break-word !important;
  }
}

.currencySymbol {
  margin-left: 0.25rem;

  color: var(--color-gray-3);
}

.commentInputWrapper {
  margin-bottom: 0 !important;
}

.sticker {
  margin: 0 auto 1.25rem;

  &_sizeSmall {
    margin: -0.375rem auto 1.25rem;
  }
}

.buttonLoading .buttonText {
  visibility: hidden;
  opacity: 0;
}

.buttonLoading::after {
  content: "";

  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;

  width: 1rem;
  height: 1rem;
  margin: auto;

  border: 0.25rem solid transparent;
  border-top-color: var(--color-white);
  border-radius: 50%;

  animation: button-loading-spinner 1s linear infinite;
}

.savedAddressBubble {
  --offset-y-value: -0.75rem;
}

.savedAddressItem {
  cursor: var(--custom-cursor, pointer);

  position: relative;

  display: flex;
  align-items: center;

  height: 2.25rem;
  padding: 0 0.625rem;

  border-radius: var(--border-radius-small);

  &:active {
    transition: none;
  }

  &:hover,
  &:focus-visible {
    text-decoration: none;

    background-color: var(--color-interactive-drop-down-menu-hover);
  }
}

.savedAddressName {
  overflow: hidden;

  margin-inline-end: auto;

  font-size: 1rem;
  font-weight: 600;
  color: var(--color-black);
  text-overflow: ellipsis;
  white-space: nowrap;
}

.iconLedger {
  position: relative;
  top: 0.0625rem;

  margin-inline-start: 0.25rem;

  font-size: 0.8125rem;
  color: var(--color-gray-3)
}

.savedAddressAddress {
  padding-inline-start: 0.5rem;

  font-size: 0.8125rem;
  color: var(--color-gray-3);
  white-space: nowrap;

  transition: opacity 150ms;

  .savedAddressDelete:hover + & {
    opacity: 0;
  }

  :global(html.animation-level-0) & {
    transition: none !important;
  }
}

.savedAddressDelete {
  position: absolute;
  z-index: 1;
  top: 50%;
  right: 0.25rem;
  transform: translateY(-50%);

  width: 7rem;
  padding: 0.25rem;

  font-size: 0.8125rem;
  text-align: right;

  opacity: 0;

  transition: opacity 150ms, color 150ms;

  &:hover {
    opacity: 1;
  }

  :global(html.animation-level-0) & {
    transition: none !important;
  }

  /* stylelint-disable-next-line order/order, at-rule-empty-line-before */
  @include respond-below(xs) {
    display: none;
  }
}

.savedAddressDeleteInner {
  cursor: var(--custom-cursor, pointer);

  color: var(--color-gray-3);

  &:hover,
  &:active {
    color: var(--color-red);
  }

  &:active {
    // Optimization
    transition: none;
  }
}

.savedAddressDeleteIcon {
  display: none;

  /* stylelint-disable-next-line order/order, at-rule-empty-line-before */
  @include respond-below(xs) {
    display: block;

    margin-inline-start: 0.25rem;

    font-size: 1.25rem;
  }
}

.tokenDropdown {
  --offset-y-value: calc(100% - 3.25rem);
  --offset-x-value: 0;

  position: relative;
  top: 0.375rem;
  right: 0.375rem;

  :global(.itemName) {
    overflow: hidden;

    max-width: 5rem;
    height: 1.25rem;
    margin-bottom: -0.125rem;

    line-height: 1.25rem;
    text-overflow: ellipsis;
  }

  :global(.menuItemName) {
    overflow: hidden;

    max-width: 15rem;
    height: 1.25rem;
    margin-bottom: -0.125rem;

    line-height: 1.25rem;
    text-overflow: ellipsis;
  }
}

.inputStatic,
.inputRichStatic {
  background: transparent;
  border: 1px solid var(--color-separator-input-stroke);
}

.inputStatic {
  /* Default input padding minus 1px accounted for border width */
  padding: 0.5rem 0.6875rem 0.375rem;
}

.inputWithIcon {
  padding-right: 2.375rem;
}

textarea.inputStatic {
  /* default input padding minus 1px accounted for border width */
  padding: 0.875rem 0.75rem 0.8125rem;
}

.commentLabel :global(.itemName) {
  position: relative;

  padding-left: 0.5rem;

  font-size: 0.8125rem;
  font-weight: 700;
  color: var(--color-blue);
}

.commentLabel :global(.menuItemName) {
  margin: unset;
}

.buttons {
  display: grid;
  grid-auto-columns: minmax(max-content, auto);
  grid-auto-flow: column;
  gap: 1rem;

  margin-top: auto;
  padding-top: 2rem;
}

.button {
  width: 100%;
  min-width: 4rem !important;
  max-width: 100% !important;
  padding: 0.5rem !important;
}

@keyframes button-loading-spinner {
  from {
    transform: rotate(0turn);
  }

  to {
    transform: rotate(1turn);
  }
}

.warningTooltipContainer {
  z-index: 1;

  width: 18.9375rem;
}

.transferShortInfo {
  display: flex;
  gap: 0.25rem;
  align-items: center;

  max-width: 100%;
  height: 2rem;
  padding: 0 0.5rem 0 0.375rem;

  font-size: 0.9375rem;
  font-weight: 500;
  color: var(--color-activity-blue);

  background-color: var(--color-activity-blue-background);
  border-radius: 1rem;
}

.transferShortInfoText {
  overflow: hidden;

  max-width: 100%;

  text-overflow: ellipsis;
  white-space: nowrap;
}

.transferShortInfoInsidePasswordForm {
  align-self: center;

  margin-bottom: 2rem;
}

.bold {
  font-weight: 700;
}

.tokenIcon {
  width: 1.25rem;
  height: 1.25rem;

  border-radius: 50%;
}

.infoBox, .burnWarning, .error {
  align-self: center;

  width: 100%;
  padding: 0.5rem 0.75rem;

  font-size: 0.9375rem;
  font-weight: 600;
  line-height: 1.3125rem;
  text-align: center;

  background-color: var(--color-background-first);
  border-radius: var(--border-radius-buttons);
}

.infoBox {
  margin: 1rem 0;
}

.infoBox ~ .infoBox {
  margin-top: 0;
}

.burnWarning, .error {
  color: var(--color-transaction-red-text);

  background-color: var(--color-transaction-red-background);
}

.spinner {
  margin: 2rem auto;
}
