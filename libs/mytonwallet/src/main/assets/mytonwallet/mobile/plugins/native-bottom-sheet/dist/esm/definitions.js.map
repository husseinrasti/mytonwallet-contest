{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import { PluginListenerHandle } from '@capacitor/core';\n\nexport type BottomSheetKeys =\n  'initial'\n  | 'receive'\n  | 'invoice'\n  | 'transfer'\n  | 'swap'\n  | 'stake'\n  | 'unstake'\n  | 'staking-info'\n  | 'vesting-info'\n  | 'vesting-confirm'\n  | 'transaction-info'\n  | 'swap-activity'\n  | 'backup'\n  | 'add-account'\n  | 'settings'\n  | 'qr-scanner'\n  | 'dapp-connect'\n  | 'dapp-transfer'\n  | 'disclaimer'\n  | 'backup-warning'\n  | 'onramp-widget';\n\nexport interface BottomSheetPlugin {\n  prepare(): Promise<void>;\n\n  applyScrollPatch(): Promise<void>;\n\n  clearScrollPatch(): Promise<void>;\n\n  disable(): Promise<void>;\n\n  enable(): Promise<void>;\n\n  delegate(options: { key: BottomSheetKeys, globalJson: string }): Promise<void>;\n\n  release(options: { key: BottomSheetKeys | '*' }): Promise<void>;\n\n  openSelf(options: { key: BottomSheetKeys, height: string, backgroundColor: string }): Promise<void>;\n\n  closeSelf(options: { key: BottomSheetKeys }): Promise<void>;\n\n  toggleSelfFullSize(options: { isFullSize: boolean }): Promise<void>;\n\n  openInMain(options: { key: BottomSheetKeys }): Promise<void>;\n\n  addListener(\n    eventName: 'delegate',\n    handler: (options: { key: BottomSheetKeys, globalJson: string }) => void,\n  ): Promise<PluginListenerHandle> & PluginListenerHandle;\n\n  addListener(\n    eventName: 'move',\n    handler: () => void,\n  ): Promise<PluginListenerHandle> & PluginListenerHandle;\n\n\n  addListener(\n    eventName: 'openInMain',\n    handler: (options: { key: BottomSheetKeys }) => void,\n  ): Promise<PluginListenerHandle> & PluginListenerHandle;\n}\n"]}