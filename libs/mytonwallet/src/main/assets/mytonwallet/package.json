{
  "name": "mytonwallet",
  "version": "3.0.12",
  "description": "The most feature-rich web wallet and browser extension for TON â€“ with support of multi-accounts, tokens (jettons), NFT, TON DNS, TON Sites, TON Proxy, and TON Magic.",
  "main": "index.js",
  "scripts": {
    "dev": "cross-env APP_ENV=development webpack serve --mode development",
    "build": "webpack && bash ./deploy/copy_to_dist.sh",
    "build:dev": "APP_ENV=development webpack --mode development && bash ./deploy/copy_to_dist.sh",
    "build:staging": "cross-env APP_ENV=staging npm run build",
    "build:production": "npm run build",
    "extension:dev": "cross-env IS_EXTENSION=1 npm run build:dev",
    "extension-chrome:package": "cross-env IS_EXTENSION=1 webpack && bash ./deploy/package_extension.sh chrome",
    "extension-chrome:package:staging": "APP_ENV=staging npm run extension-chrome:package",
    "extension-chrome:package:production": "npm run extension-chrome:package",
    "extension-firefox:package": "cross-env IS_FIREFOX_EXTENSION=1 IS_EXTENSION=1 webpack && bash ./deploy/package_extension.sh firefox",
    "extension-firefox:package:staging": "cross-env APP_ENV=staging npm run extension-firefox:package",
    "extension-firefox:package:production": "npm run extension-firefox:package",
    "extension-opera:package": "cross-env IS_OPERA_EXTENSION=1 IS_EXTENSION=1 webpack && bash ./deploy/package_extension.sh opera",
    "extension-opera:package:staging": "cross-env APP_ENV=staging npm run extension-opera:package",
    "extension-opera:package:production": "npm run extension-opera:package",
    "electron:dev": "npm run electron:webpack && IS_PACKAGED_ELECTRON=1 concurrently -n main,renderer,electron \"npm run electron:webpack -- --watch\" \"npm run dev\" \"electronmon dist/electron\"",
    "electron:webpack": "cross-env APP_ENV=$ENV webpack --config ./webpack-electron.config.ts",
    "electron:build": "IS_PACKAGED_ELECTRON=1 npm run build:$ENV && electron-builder install-app-deps && electron-rebuild && ENV=$ENV npm run electron:webpack",
    "electron:package": "npm run electron:build && npx rimraf dist-electron && electron-builder build --win --mac --linux --config src/electron/config.yml",
    "electron:package:staging": "ENV=staging npm run electron:package -- -p never",
    "electron:release:production": "ENV=production npm run electron:package -- -p always",
    "mobile:build": "IS_CAPACITOR=1 npm run build && cap sync",
    "mobile:build:dev": "cross-env APP_ENV=development npm run mobile:build",
    "mobile:build:staging": "cross-env APP_ENV=staging npm run mobile:build",
    "mobile:build:production": "npm run mobile:build",
    "mobile:run:android": "npm run mobile:build:dev && cap run android",
    "mobile:run:ios": "npm run mobile:build:dev && cap run ios",
    "build:icons": "fantasticon",
    "check": "tsc && stylelint \"**/*.{css,scss}\" && eslint . --ext .ts,.tsx",
    "check:fix": "npm run check -- --fix",
    "test": "cross-env APP_ENV=test jest --verbose --forceExit",
    "test:playwright": "playwright test",
    "test:record": "playwright codegen localhost:1235",
    "prepare": "husky install",
    "statoscope:validate-diff": "statoscope validate --input input.json --reference reference.json",
    "postversion": "./deploy/postversion.sh"
  },
  "engines": {
    "node": "^18",
    "npm": "^9"
  },
  "husky": {
    "hooks": {
      "pre-commit": "tsc && lint-staged"
    }
  },
  "lint-staged": {
    "*.{ts,tsx,js}": "eslint --fix",
    "*.{css,scss}": "stylelint --fix"
  },
  "author": "MyTonWallet",
  "license": "GPL-3.0-or-later",
  "protocols": [
    {
      "name": "Ton",
      "schemes": [
        "ton"
      ]
    },
    {
      "name": "TonConnect",
      "schemes": [
        "tc",
        "mytonwallet-tc"
      ]
    },
    {
      "name": "MyTonWallet",
      "schemes": [
        "mtw"
      ]
    }
  ],
  "devDependencies": {
    "@babel/core": "^7.21.3",
    "@babel/plugin-proposal-class-properties": "^7.18.6",
    "@babel/plugin-proposal-logical-assignment-operators": "^7.20.7",
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.18.6",
    "@babel/plugin-syntax-nullish-coalescing-operator": "^7.8.3",
    "@babel/preset-env": "^7.20.2",
    "@babel/preset-react": "^7.18.6",
    "@babel/preset-typescript": "^7.21.0",
    "@babel/register": "^7.21.0",
    "@capacitor/cli": "^5.6.0",
    "@peculiar/webcrypto": "^1.3.2",
    "@playwright/test": "^1.31.2",
    "@statoscope/cli": "^5.27.0",
    "@statoscope/webpack-plugin": "^5.27.0",
    "@testing-library/jest-dom": "^5.16.5",
    "@tonconnect/protocol": "^2.2.6",
    "@types/chrome": "^0.0.191",
    "@types/croppie": "^2.6.1",
    "@types/jest": "^29.5.0",
    "@types/js-yaml": "^4.0.5",
    "@types/node": "^18.15.10",
    "@types/react": "^18.0.28",
    "@types/react-dom": "^18.0.11",
    "@types/sha256": "^0.2.2",
    "@types/webextension-polyfill": "^0.10.1",
    "@types/webpack": "^5.28.0",
    "@types/webpack-bundle-analyzer": "^4.6.0",
    "@types/webpack-dev-server": "^4.7.2",
    "@types/wicg-mediasession": "^1.1.3",
    "@typescript-eslint/eslint-plugin": "^5.55.0",
    "@typescript-eslint/parser": "^5.55.0",
    "@vue/preload-webpack-plugin": "^2.0.0",
    "@webpack-cli/serve": "^2.0.1",
    "autoprefixer": "^10.4.14",
    "babel-loader": "^9.1.2",
    "before-build-webpack": "^0.2.13",
    "browserlist": "^1.0.1",
    "concurrently": "^7.6.0",
    "copy-webpack-plugin": "^11.0.0",
    "cross-env": "^7.0.3",
    "css-loader": "^6.7.3",
    "css-minimizer-webpack-plugin": "^3.4.1",
    "dotenv": "^16.0.3",
    "electron": "^22.1.0",
    "electron-builder": "^24.4.0",
    "electron-context-menu": "^3.6.1",
    "electron-rebuild": "^3.2.9",
    "electron-store": "^8.1.0",
    "electron-updater": "^5.3.0",
    "electron-window-state": "^5.0.3",
    "electronmon": "^2.0.2",
    "eslint": "^8.36.0",
    "eslint-config-airbnb": "^19.0.4",
    "eslint-config-airbnb-typescript": "^17.0.0",
    "eslint-config-react-app": "^7.0.1",
    "eslint-import-resolver-webpack": "^0.13.2",
    "eslint-plugin-flowtype": "^8.0.3",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-jsx-a11y": "^6.7.1",
    "eslint-plugin-jsx-expressions": "^1.3.1",
    "eslint-plugin-no-async-without-await": "^1.2.0",
    "eslint-plugin-no-null": "^1.0.2",
    "eslint-plugin-react": "^7.32.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-hooks-static-deps": "^1.0.7",
    "eslint-plugin-simple-import-sort": "^10.0.0",
    "eslint-plugin-teactn": "git+https://github.com/korenskoy/eslint-plugin-teactn#c2c39dd005d58c07c24c4361de804dce1c6261b5",
    "fantasticon": "^1.2.3",
    "git-revision-webpack-plugin": "^5.0.0",
    "html-webpack-plugin": "^5.5.0",
    "husky": "^8.0.3",
    "jest": "^29.5.0",
    "jest-raw-loader": "^1.0.1",
    "js-yaml": "^4.1.0",
    "lint-staged": "^15.0.2",
    "mini-css-extract-plugin": "^2.7.5",
    "postcss": "^8.4.14",
    "postcss-loader": "^7.1.0",
    "postcss-modules": "^6.0.0",
    "react": "^18.2.0",
    "replace-in-file": "^6.3.2",
    "sass": "^1.59.3",
    "sass-loader": "^13.2.1",
    "script-loader": "^0.7.2",
    "serve": "^14.2.0",
    "style-loader": "^3.3.2",
    "stylelint": "^14.16.1",
    "stylelint-config-clean-order": "^0.8.0",
    "stylelint-config-recommended-scss": "^8.0.0",
    "stylelint-declaration-block-no-ignored-properties": "^2.7.0",
    "stylelint-group-selectors": "^1.0.9",
    "stylelint-high-performance-animation": "^1.8.0",
    "stylelint-order": "^5.0.0",
    "typescript": "^5.2.2",
    "webpack": "^5.76.2",
    "webpack-dev-server": "^4.13.1"
  },
  "dependencies": {
    "@awesome-cordova-plugins/core": "^6.6.0",
    "@awesome-cordova-plugins/in-app-browser": "^6.6.0",
    "@capacitor-mlkit/barcode-scanning": "^5.4.0",
    "@capacitor/action-sheet": "^5.0.7",
    "@capacitor/android": "^5.7.2",
    "@capacitor/app": "^5.0.7",
    "@capacitor/app-launcher": "^5.0.7",
    "@capacitor/clipboard": "^5.0.7",
    "@capacitor/core": "^5.7.2",
    "@capacitor/haptics": "^5.0.7",
    "@capacitor/ios": "^5.7.2",
    "@capacitor/status-bar": "^5.0.7",
    "@capgo/capacitor-native-biometric": "^5.1.0",
    "@capgo/native-audio": "^6.2.7",
    "@ledgerhq/hw-transport-webhid": "^6.28.1",
    "@ledgerhq/hw-transport-webusb": "^6.28.1",
    "@mauricewegner/capacitor-navigation-bar": "^2.0.3",
    "@ton-community/ton-ledger": "^7.2.0-pre.3",
    "@ton/core": "^0.56.3",
    "@ton/ton": "github:mytonwallet-org/tonkeeper-ton#0d0fe1cd7ccfe1b87c1083b157a158aa0f50cda8",
    "buffer": "^6.0.3",
    "capacitor-native-settings": "^5.0.1",
    "capacitor-plugin-safe-area": "^2.0.6",
    "capacitor-secure-storage-plugin": "github:troman29/capacitor-secure-storage-plugin#22a5a9e3b368b5d9703a3011e5b7af5f0f0c7596",
    "capacitor-splash-screen": "file:mobile/plugins/capacitor-splash-screen",
    "cordova-plugin-inappbrowser": "github:mytonwalletorg/cordova-plugin-inappbrowser#988e53fac380314d9587fb3c297bc2e810810279",
    "idb-keyval": "^6.2.0",
    "native-bottom-sheet": "file:mobile/plugins/native-bottom-sheet",
    "native-dialog": "file:mobile/plugins/native-dialog",
    "pako": "^2.1.0",
    "qr-code-styling": "github:troman29/qr-code-styling#c00d0",
    "qrcode-generator": "^1.4.4",
    "tonapi-sdk-js": "^1.0.10",
    "tonweb-mnemonic": "^1.0.1",
    "tweetnacl": "^1.0.3",
    "v8-compile-cache": "^2.4.0",
    "webextension-polyfill": "^0.10.0"
  }
}
